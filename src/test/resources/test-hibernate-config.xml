<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">


	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" /> 
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="geoDbDatasource" />
		<property name="packagesToScan">
		    <list>
		        <value>br.les.opus</value>
		    </list>
		    </property>
		<property name="hibernateProperties"> 
            <props> 
                <prop key="hibernate.dialect">org.hibernate.spatial.dialect.h2geodb.GeoDBDialect</prop> 
                <prop key="hibernate.show_sql">false</prop> 
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.hbm2ddl.import_files">import.sql</prop>
            </props> 
        </property> 
	</bean>
	
	<util:list id="sqlInitResources" value-type="org.springframework.core.io.Resource">
	    <value>classpath:setup-schemas.sql</value>
	</util:list>

	<bean id="geoDbDatasource" class="br.les.opus.test.util.GeoDBInMemoryDataSource" 
		init-method="runInitSqlResources"
		destroy-method="destroyTcpServer">
		<property name="sqlInitResources" ref="sqlInitResources" />
	</bean>
</beans>